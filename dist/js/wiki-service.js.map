{"version":3,"sources":["wiki-service.ts"],"names":["SearchResult","SearchResult.constructor","WikiService","WikiService.constructor","WikiService.wikiSearch","WikiService.generateSuggestions"],"mappings":";;;;;;;;;AAAA,qBAAgC,eAAe,CAAC,CAAA;AAChD,IAAY,EAAE,WAAM,SAAS,CAAC,CAAA;AAC9B,qBAA2B,eAAe,CAAC,CAAA;AAE3C;IAAAA;IAIAC,CAACA;IAADD,mBAACA;AAADA,CAJA,AAICA,IAAA;AAJY,oBAAY,eAIxB,CAAA;AAED;IAQCE,qBAAmBA,KAAYA;QARhCC,iBA4BCA;QApBmBA,UAAKA,GAALA,KAAKA,CAAOA;QAN/BA,YAAOA,GAAGA,2GAA2GA,CAACA;QAEtHA,gBAAWA,GAAaA,EAAEA,CAACA;QAC3BA,eAAUA,GAAaA,EAAEA,CAACA;QAC1BA,gBAAWA,GAAGA,IAAUA,EAAGA,CAACA,OAAOA,EAAEA,CAACA;QAGrCA,IAAIA,CAACA,WAAWA;aACdA,YAAYA,CAACA,GAAGA,CAACA;aACjBA,SAASA,CAAEA,UAAAA,KAAKA,IAAIA,OAAAA,KAAIA,CAACA,UAAUA,CAACA,KAAKA,CAACA,EAAtBA,CAAsBA,CAAEA;aAC5CA,SAASA,CACTA,UAAAA,OAAOA;YACNA,IAAIA,WAAWA,GAAaA,OAAOA,CAACA,CAACA,CAACA,CAACA;YACvCA,KAAIA,CAACA,WAAWA,GAAGA,WAAWA,CAACA,KAAKA,EAAEA,CAACA,CAAEA,kCAAkCA;QAC5EA,CAACA,EACDA,UAAAA,KAAKA,IAAIA,OAAAA,OAAOA,CAACA,GAAGA,CAAEA,KAAKA,CAACA,EAAnBA,CAAmBA,CAC5BA,CAACA;IACJA,CAACA;IAEDD,gCAAUA,GAAVA,UAAWA,KAAaA;QACvBE,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA,OAAOA,CAAEA,KAAGA,IAAIA,CAACA,OAAOA,GAAGA,KAAOA,CAAEA,CAACA,GAAGA,CAAEA,UAACA,GAAaA,IAAKA,OAAKA,GAAGA,CAACA,IAAIA,EAAEA,EAAfA,CAAeA,CAAEA,CAACA;IAClGA,CAACA;IAEDF,yCAAmBA,GAAnBA,UAAoBA,KAAaA;QAChCG,IAAIA,CAACA,WAAWA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA;IAC9BA,CAACA;IA3BFH;QAACA,iBAAUA,EAAEA;;oBA4BZA;IAADA,kBAACA;AAADA,CA5BA,AA4BCA,IAAA;AA3BY,mBAAW,cA2BvB,CAAA","file":"wiki-service.js","sourcesContent":["import { Jsonp, Response } from 'angular2/http';\r\nimport * as Rx from 'rxjs/Rx';\r\nimport { Injectable } from 'angular2/core';\r\n\r\nexport class SearchResult {\r\n\tname: string;\r\n\tdescription: string;\r\n\turl: string;\r\n}\r\n\r\n@Injectable()\r\nexport class WikiService {\r\n\tbaseUrl = 'https://en.wikipedia.org/w/api.php?action=opensearch&limit=10&format=json&callback=JSONP_CALLBACK&search=';\r\n\t\r\n\tsuggestions: string[] = [];\r\n\tqueryQueue: string[] = [];\r\n\tqueryStream = new (<any>Rx).Subject();\r\n\r\n\tconstructor(public jsonp: Jsonp) {\r\n\t\tthis.queryStream\r\n\t\t\t.debounceTime(250)\r\n\t\t\t.switchMap( query => this.wikiSearch(query) )\r\n\t\t\t.subscribe(\r\n\t\t\t\tresults  => {\r\n\t\t\t\t\tlet resSuggests: string[] = results[1];\r\n\t\t\t\t\tthis.suggestions = resSuggests.slice();  // We prefer a copy to a reference\r\n\t\t\t\t},\r\n\t\t\t\terror => console.log (error)\r\n\t\t\t);\r\n\t}\r\n\t\r\n\twikiSearch(query: string): Rx.Observable<any> {\r\n\t\treturn this.jsonp.request( `${this.baseUrl}${query}` ).map( (res: Response) => <any>res.json() );\r\n\t}\r\n\t\r\n\tgenerateSuggestions(query: string) {\r\n\t\tthis.queryStream.next(query);\r\n\t}\r\n}"],"sourceRoot":"/source/"}