{"version":3,"sources":["wiki-service.ts"],"names":["SearchResult","SearchResult.constructor","WikiService","WikiService.constructor","WikiService.wikiSearch","WikiService.generateSuggestions","WikiService.showResults","WikiService.parseResults","WikiService.clearResults"],"mappings":"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","file":"wiki-service.js","sourcesContent":["import { Jsonp, Response } from 'angular2/http';\r\nimport * as Rx from 'rxjs/Rx';\r\nimport { Injectable } from 'angular2/core';\r\n\r\nexport class SearchResult {\r\n\tname: string;\r\n\tdescription: string;\r\n\turl: string;\r\n}\r\n\r\n@Injectable()\r\nexport class WikiService {\r\n\tbaseUrl = 'https://en.wikipedia.org/w/api.php?action=opensearch&limit=10&format=json&callback=JSONP_CALLBACK&search=';\r\n\t\r\n\tsuggestions: string[] = [];\r\n\tqueryStream = new (<any>Rx).Subject();\r\n\tresultStream = new (<any>Rx).Observable();\r\n\tresultBuffer: any;\r\n\tresults: SearchResult[] = [];\r\n\tshowingResults = false;\r\n\tpendingQuery = false;\r\n\r\n\tconstructor(public jsonp: Jsonp) {\r\n\t\tthis.resultStream = this.queryStream\r\n\t\t\t\t\t\t\t\t.debounceTime(250)\r\n\t\t\t\t\t\t\t\t.switchMap( query => this.wikiSearch(query) );\r\n\t\tthis.resultStream.subscribe(\r\n\t\t\t\tresults  => {\r\n\t\t\t\t\tthis.resultBuffer = results; // Save the result in case we decide to view results on this query\r\n\t\t\t\t\tlet resSuggests: string[] = results[1];\r\n\t\t\t\t\tthis.suggestions = resSuggests.slice();  // We prefer a copy to a reference\r\n\t\t\t\t},\r\n\t\t\t\terror => console.log (error)\r\n\t\t\t);\r\n\t}\r\n\t\r\n\twikiSearch(query: string): Rx.Observable<any> {\r\n\t\treturn this.jsonp.request( `${this.baseUrl}${query}` ).map( (res: Response) => <any>res.json() );\r\n\t}\r\n\t\r\n\tgenerateSuggestions(query: string) {\r\n\t\tthis.queryStream.next(query);\r\n\t}\r\n\t\r\n\tshowResults(query: string) {\r\n\t\tif ( !this.resultBuffer || this.resultBuffer[0] != query ) {\r\n\t\t\tthis.pendingQuery = true;\r\n\t\t\tthis.wikiSearch(query).subscribe( result => {\r\n\t\t\t\tthis.resultBuffer = result;\r\n\t\t\t\tthis.parseResults();\r\n\t\t\t});\t\r\n\t\t} else this.parseResults();\r\n\t}\r\n\t\r\n\tparseResults() {\r\n\t\tthis.pendingQuery = false;\r\n\t\tthis.suggestions = [];\r\n\t\tthis.results = [];\r\n\t\tlet resultNames = this.resultBuffer[1];\r\n\t\tlet resultDescriptions = this.resultBuffer[2];\r\n\t\tlet resultUrls = this.resultBuffer[3];\r\n\t\t\r\n\t\tif (resultNames.length < 1) {\r\n            let resultNull = new SearchResult();\r\n            resultNull.name = 'No Results Found!';\r\n            resultNull.description = 'Please try another search term.';\r\n            resultNull.url = '#';\r\n            this.results.push(resultNull);\r\n            this.resultBuffer = null;\r\n            this.showingResults = true;\r\n            return;\r\n        }\r\n\t\t\r\n\t\tfor (let i=0; i < resultNames.length; i++) {\r\n\t\t\tlet result = new SearchResult();\r\n\t\t\tresult.name = resultNames[i];\r\n\t\t\tresult.description = resultDescriptions[i];\r\n\t\t\tresult.url = resultUrls[i];\r\n\t\t\tthis.results.push(result);\t\t\r\n\t\t}\r\n\t\tthis.resultBuffer = null;\r\n\t\tthis.showingResults = true;\r\n\t}\r\n\t\r\n\tclearResults() {\r\n\t\tthis.suggestions = [];\r\n\t\tthis.results = [];\r\n\t\tthis.resultBuffer = null;\r\n\t\tthis.showingResults = false;\r\n\t}\r\n\r\n\r\n}"],"sourceRoot":"/source/"}