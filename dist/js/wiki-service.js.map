{"version":3,"sources":["wiki-service.ts"],"names":["SearchResult","SearchResult.constructor","WikiService","WikiService.constructor","WikiService.wikiSearch","WikiService.generateSuggestions"],"mappings":";;;;;;;;;AAAA,qBAAgC,eAAe,CAAC,CAAA;AAEhD,wBAAwB,cACxB,CAAC,CADqC;AACtC,QAAO,uBAAuB,CAAC,CAAA;AAC/B,QAAO,4BAA4B,CAAC,CAAA;AACpC,qBAA2B,eAAe,CAAC,CAAA;AAE3C;IAAAA;IAIAC,CAACA;IAADD,mBAACA;AAADA,CAJA,AAICA,IAAA;AAJY,oBAAY,eAIxB,CAAA;AAED;IASCE,qBAAmBA,KAAYA;QAAZC,UAAKA,GAALA,KAAKA,CAAOA;QAP/BA,YAAOA,GAAGA,2GAA2GA,CAACA;QAEtHA,gBAAWA,GAAaA,EAAEA,CAACA;QAC3BA,iBAAYA,GAAGA,KAAKA,CAACA;QACrBA,eAAUA,GAAaA,EAAEA,CAACA;QAC1BA,gBAAWA,GAAGA,IAAIA,iBAAOA,EAAEA,CAACA;IAI5BA,CAACA;IAEDD,gCAAUA,GAAVA,UAAWA,KAAaA;QACvBE,IAAIA,CAACA,YAAYA,GAAGA,IAAIA,CAACA;QACzBA,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA,OAAOA,CAAEA,KAAGA,IAAIA,CAACA,OAAOA,GAAGA,KAAOA,CAAEA,CAACA,GAAGA,CAAEA,UAACA,GAAaA,IAAKA,OAAAA,GAAGA,CAACA,IAAIA,EAAEA,EAAVA,CAAUA,CAAEA,CAACA;IAC7FA,CAACA;IAEDF,yCAAmBA,GAAnBA,UAAoBA,KAAaA;QAAjCG,iBA+CCA;QA9CAA,0EAA0EA;QAC1EA,IAAIA,CAACA,WAAWA,CAACA,MAAMA,CAACA,KAAKA,CAACA;aAC5BA,QAAQA,CAACA,GAAGA,CAACA;aACbA,GAAGA,CACHA,UAAAA,KAAKA,IAAIA,OAAAA,KAAIA,CAACA,UAAUA,CAACA,KAAKA,CAACA;aAC9BA,SAASA,CACTA,UAAAA,OAAOA;YACNA,KAAIA,CAACA,YAAYA,GAAGA,KAAKA,CAACA;YAC1BA,IAAIA,WAAWA,GAAaA,OAAOA,CAACA,CAACA,CAACA,CAACA;YACvCA,KAAIA,CAACA,WAAWA,GAAGA,WAAWA,CAACA,KAAKA,EAAEA,CAACA,CAAEA,kCAAkCA;YAC3EA,EAAEA,CAACA,CAACA,KAAIA,CAACA,UAAUA,CAACA,MAAMA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBACjCA,IAAIA,UAAUA,GAAGA,KAAIA,CAACA,UAAUA,CAACA,GAAGA,EAAEA,CAACA;gBACvCA,KAAIA,CAACA,mBAAmBA,CAACA,UAAUA,CAACA,CAACA;gBACrCA,OAAOA,CAACA,GAAGA,CAACA,qFAAmFA,UAAUA,MAAGA,CAACA,CAACA;YAC/GA,CAACA;QACFA,CAACA,EACDA,UAAAA,KAAKA,IAAIA,OAAAA,OAAOA,CAACA,GAAGA,CAACA,KAAKA,CAACA,EAAlBA,CAAkBA,CAC3BA,EAbQA,CAaRA,CACDA,CAACA;QACHA,MAAMA,CAACA;QACPA,uGAAuGA;QACvGA,EAAEA,CAACA,CAACA,IAAIA,CAACA,YAAYA,IAAIA,IAAIA,CAACA,UAAUA,CAACA,MAAMA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACrDA,IAAIA,CAACA,UAAUA,CAACA,GAAGA,EAAEA,CAACA;YACtBA,IAAIA,CAACA,UAAUA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA;YAC5BA,OAAOA,CAACA,GAAGA,CAACA,gFAA8EA,IAAIA,CAACA,UAAUA,MAAGA,CAACA,CAACA;YAC9GA,MAAMA,CAACA;QACRA,CAACA;QACDA,IAAIA,CAACA,EAAEA,CAACA,CAACA,IAAIA,CAACA,YAAYA,IAAIA,IAAIA,CAACA,UAAUA,CAACA,MAAMA,IAAIA,CAACA,CAACA,CAACA,CAACA;YAC3DA,IAAIA,CAACA,UAAUA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA;YAC5BA,OAAOA,CAACA,GAAGA,CAACA,yDAAuDA,IAAIA,CAACA,UAAYA,CAACA,CAACA;YACtFA,MAAMA,CAACA;QACRA,CAACA;QACDA,IAAIA,CAACA,UAAUA,CAACA,KAAKA,CAACA;aACpBA,SAASA,CACTA,UAAAA,OAAOA;YACNA,KAAIA,CAACA,YAAYA,GAAGA,KAAKA,CAACA;YAC1BA,IAAIA,WAAWA,GAAaA,OAAOA,CAACA,CAACA,CAACA,CAACA;YACvCA,KAAIA,CAACA,WAAWA,GAAGA,WAAWA,CAACA,KAAKA,EAAEA,CAACA,CAAEA,kCAAkCA;YAC3EA,EAAEA,CAACA,CAACA,KAAIA,CAACA,UAAUA,CAACA,MAAMA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBACjCA,IAAIA,UAAUA,GAAGA,KAAIA,CAACA,UAAUA,CAACA,GAAGA,EAAEA,CAACA;gBACvCA,KAAIA,CAACA,mBAAmBA,CAACA,UAAUA,CAACA,CAACA;gBACrCA,OAAOA,CAACA,GAAGA,CAACA,qFAAmFA,UAAUA,MAAGA,CAACA,CAACA;YAC/GA,CAACA;QACFA,CAACA,EACDA,UAAAA,KAAKA,IAAIA,OAAAA,OAAOA,CAACA,GAAGA,CAACA,KAAKA,CAACA,EAAlBA,CAAkBA,CAC3BA,CAACA;IACJA,CAACA;IAjEFH;QAACA,iBAAUA,EAAEA;;oBAkEZA;IAADA,kBAACA;AAADA,CAlEA,AAkECA,IAAA;AAjEY,mBAAW,cAiEvB,CAAA","file":"wiki-service.js","sourcesContent":["import { Jsonp, Response } from 'angular2/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject'\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/debounce';\r\nimport { Injectable } from 'angular2/core';\r\n\r\nexport class SearchResult {\r\n\tname: string;\r\n\tdescription: string;\r\n\turl: string;\r\n}\r\n\r\n@Injectable()\r\nexport class WikiService {\r\n\tbaseUrl = 'https://en.wikipedia.org/w/api.php?action=opensearch&limit=10&format=json&callback=JSONP_CALLBACK&search=';\r\n\t\r\n\tsuggestions: string[] = [];\r\n\tpendingQuery = false;\r\n\tqueryQueue: string[] = [];\r\n\tqueryStream = new Subject();\r\n\r\n\tconstructor(public jsonp: Jsonp) {\r\n\t\t\r\n\t}\r\n\t\r\n\twikiSearch(query: string): Observable<any> {\r\n\t\tthis.pendingQuery = true;\r\n\t\treturn this.jsonp.request( `${this.baseUrl}${query}` ).map( (res: Response) => res.json() );\r\n\t}\r\n\t\r\n\tgenerateSuggestions(query: string) {\r\n\t\t// Need to figure out how to import onNext and flatMap doesn't work either\r\n\t\tthis.queryStream.onNext(query)\r\n\t\t\t.debounce(500)\r\n\t\t\t.map(\r\n\t\t\t\tquery => this.wikiSearch(query)\r\n\t\t\t\t.subscribe(\r\n\t\t\t\t\tresults => {\r\n\t\t\t\t\t\tthis.pendingQuery = false;\r\n\t\t\t\t\t\tlet resSuggests: string[] = results[1];\r\n\t\t\t\t\t\tthis.suggestions = resSuggests.slice();  // We prefer a copy to a reference\r\n\t\t\t\t\t\tif (this.queryQueue.length != 0) {\r\n\t\t\t\t\t\t\tlet chainQuery = this.queryQueue.pop();\r\n\t\t\t\t\t\t\tthis.generateSuggestions(chainQuery);\r\n\t\t\t\t\t\t\tconsole.log(`We've finished a query and have an item in queue, execute follow up query with: ${chainQuery}.`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror => console.log(error)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\treturn;\r\n\t\t// Only add to the queue if it is empty, and only execute a query if there isn't already a pending one.\r\n\t\tif (this.pendingQuery && this.queryQueue.length > 0) {\r\n\t\t\tthis.queryQueue.pop();\r\n\t\t\tthis.queryQueue.push(query);\r\n\t\t\tconsole.log(`Pending query, and we have an old item in queue, clear it and add new one: ${this.queryQueue}.`);\r\n\t\t\treturn; \r\n\t\t}\r\n\t\telse if (this.pendingQuery && this.queryQueue.length == 0) {\r\n\t\t\tthis.queryQueue.push(query);\r\n\t\t\tconsole.log(`Pending query, empty queue, add new query to queue: ${this.queryQueue}`);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.wikiSearch(query)\r\n\t\t\t.subscribe(\r\n\t\t\t\tresults => {\r\n\t\t\t\t\tthis.pendingQuery = false;\r\n\t\t\t\t\tlet resSuggests: string[] = results[1];\r\n\t\t\t\t\tthis.suggestions = resSuggests.slice();  // We prefer a copy to a reference\r\n\t\t\t\t\tif (this.queryQueue.length != 0) {\r\n\t\t\t\t\t\tlet chainQuery = this.queryQueue.pop();\r\n\t\t\t\t\t\tthis.generateSuggestions(chainQuery);\r\n\t\t\t\t\t\tconsole.log(`We've finished a query and have an item in queue, execute follow up query with: ${chainQuery}.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror => console.log(error)\r\n\t\t\t);\r\n\t}\r\n}"],"sourceRoot":"/source/"}