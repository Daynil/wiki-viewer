{"version":3,"sources":["wiki-service.ts"],"names":["SearchResult","SearchResult.constructor","WikiService","WikiService.constructor","WikiService.wikiSearch","WikiService.generateSuggestions"],"mappings":";;;;;;;;;AAAA,qBAAsB,eAAe,CAAC,CAAA;AAEtC,QAAO,uBAAuB,CAAC,CAAA;AAC/B,qBAA2B,eAAe,CAAC,CAAA;AAE3C;IAAAA;IAIAC,CAACA;IAADD,mBAACA;AAADA,CAJA,AAICA,IAAA;AAJY,oBAAY,eAIxB,CAAA;AAED;IAMCE,qBAAmBA,KAAYA;QAAZC,UAAKA,GAALA,KAAKA,CAAOA;QAJ/BA,YAAOA,GAAGA,2GAA2GA,CAACA;QAEtHA,gBAAWA,GAAaA,EAAEA,CAACA;IAI3BA,CAACA;IAEDD,gCAAUA,GAAVA,UAAWA,KAAaA;QACvBE,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA,OAAOA,CAAEA,KAAGA,IAAIA,CAACA,OAAOA,GAAGA,KAAOA,CAAEA,CAACA,GAAGA,CACzDA,UAAAA,GAAGA,IAAIA,OAAAA,GAAGA,CAACA,IAAIA,EAAEA,EAAVA,CAAUA,CAChBA,CAACA;IACJA,CAACA;IAEDF,yCAAmBA,GAAnBA,UAAoBA,KAAaA;QAAjCG,iBASCA;QARAA,IAAIA,CAACA,UAAUA,CAACA,KAAKA,CAACA;aACpBA,SAASA,CACTA,UAAAA,OAAOA;YACNA,IAAIA,WAAWA,GAAaA,OAAOA,CAACA,CAACA,CAACA,CAACA;YACvCA,KAAIA,CAACA,WAAWA,GAAGA,WAAWA,CAACA,KAAKA,EAAEA,CAACA,CAAEA,kCAAkCA;QAC5EA,CAACA,EACDA,UAAAA,KAAKA,IAAIA,OAAAA,OAAOA,CAACA,GAAGA,CAACA,KAAKA,CAACA,EAAlBA,CAAkBA,CAC3BA,CAACA;IACJA,CAACA;IAzBFH;QAACA,iBAAUA,EAAEA;;oBA0BZA;IAADA,kBAACA;AAADA,CA1BA,AA0BCA,IAAA;AAzBY,mBAAW,cAyBvB,CAAA","file":"wiki-service.js","sourcesContent":["import { Jsonp } from 'angular2/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport { Injectable } from 'angular2/core';\r\n\r\nexport class SearchResult {\r\n\tname: string;\r\n\tdescription: string;\r\n\turl: string;\r\n}\r\n\r\n@Injectable()\r\nexport class WikiService {\r\n\tbaseUrl = 'https://en.wikipedia.org/w/api.php?action=opensearch&limit=10&format=json&callback=JSONP_CALLBACK&search=';\r\n\t\r\n\tsuggestions: string[] = [];\r\n\t\r\n\tconstructor(public jsonp: Jsonp) {\r\n\t\t\r\n\t}\r\n\t\r\n\twikiSearch(query: string): Observable<any> {\r\n\t\treturn this.jsonp.request( `${this.baseUrl}${query}` ).map(\r\n\t\t\tres => res.json()\r\n\t\t\t);\r\n\t}\r\n\t\r\n\tgenerateSuggestions(query: string) {\r\n\t\tthis.wikiSearch(query)\r\n\t\t\t.subscribe(\r\n\t\t\t\tresults => {\r\n\t\t\t\t\tlet resSuggests: string[] = results[1];\r\n\t\t\t\t\tthis.suggestions = resSuggests.slice();  // We prefer a copy to a reference\r\n\t\t\t\t},\r\n\t\t\t\terror => console.log(error)\r\n\t\t\t);\r\n\t}\r\n}"],"sourceRoot":"/source/"}